import React, { useEffect } from 'react';
import { usePDF } from 'react-to-pdf';

interface PdfDocumentProps {
  content: string;
}

const PdfDocument: React.FC<PdfDocumentProps> = ({ content }) => {
  useEffect(() => {
    console.log('PdfDocument rendered with content:', content);
  }, [content]);

  // Split the content into paragraphs
  const paragraphs = content.split('\n').filter(paragraph => paragraph.trim() !== '');

  return (
    <div style={{ padding: '40px', fontFamily: 'Arial, sans-serif', maxWidth: '800px', margin: '0 auto' }}>
      <h1 style={{ fontSize: '24px', color: '#333', marginBottom: '20px', textAlign: 'center' }}>Best Man Speech</h1>
      {paragraphs.map((paragraph, index) => (
        <p key={index} style={{ fontSize: '14px', lineHeight: '1.6', color: '#444', textAlign: 'justify', marginBottom: '1em' }}>
          {paragraph}
        </p>
      ))}
      <div style={{ marginTop: '40px', borderTop: '1px solid #ccc', paddingTop: '20px', fontSize: '12px', color: '#888', textAlign: 'center' }}>
        Generated by Best Man Speech Generator
      </div>
    </div>
  );
};

export const usePdfGenerator = (content: string) => {
  const { toPDF, targetRef } = usePDF({
    filename: 'best-man-speech.pdf',
    page: { margin: 20 },
    method: 'save',
  });

  useEffect(() => {
    console.log('usePdfGenerator hook initialized with content:', content);
  }, [content]);

  const generatePdf = () => {
    console.log('Generating PDF with content:', content);
    toPDF();
  };

  const PdfContent = () => {
    useEffect(() => {
      console.log('PdfContent rendered');
    }, []);

    return (
      <div style={{ position: 'absolute', left: '-9999px' }}>
        <div ref={targetRef}>
          <PdfDocument content={content} />
        </div>
      </div>
    );
  };

  return { generatePdf, PdfContent };
};